<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CSS 筆記整理</title>
      <link href="/2019/07/01/css/"/>
      <url>/2019/07/01/css/</url>
      
        <content type="html"><![CDATA[<p>整理記錄 <code>CSS</code> 相關的筆記連結。<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 5 筆記整理</title>
      <link href="/2019/07/01/html5/"/>
      <url>/2019/07/01/html5/</url>
      
        <content type="html"><![CDATA[<p>整理記錄 <code>HTML 5</code> 相關的筆記連結。<br><a id="more"></a></p><h2 id="基礎知識"><a href="#基礎知識" class="headerlink" title="基礎知識"></a>基礎知識</h2><h4 id=""><a href="#" class="headerlink" title=""></a><a href="/2019/06/30/html5-tag/" title="HTML 5：語意標籤">HTML 5：語意標籤</a></h4>]]></content>
      
      
      
        <tags>
            
            <tag> HTML 5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 筆記整理</title>
      <link href="/2019/06/30/javascript/"/>
      <url>/2019/06/30/javascript/</url>
      
        <content type="html"><![CDATA[<p>整理記錄 <code>JavaScript</code> 相關的筆記連結。<br><a id="more"></a></p><h2 id="基礎知識"><a href="#基礎知識" class="headerlink" title="基礎知識"></a>基礎知識</h2><h4 id=""><a href="#" class="headerlink" title=""></a><a href="/2019/06/23/javascript-hoisting/" title="JavaScript：Hoisting (宣告提升)">JavaScript：Hoisting (宣告提升)</a></h4><h4 id="-1"><a href="#-1" class="headerlink" title=""></a><a href="/2019/06/30/javascript-this-basic/" title="JavaScript：this (基礎)">JavaScript：this (基礎)</a></h4><h4 id="-2"><a href="#-2" class="headerlink" title=""></a><a href="/2019/06/30/javascript-this-advanced/" title="JavaScript：this (進階)">JavaScript：this (進階)</a></h4><h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h4 id="-3"><a href="#-3" class="headerlink" title=""></a><a href="/2019/06/23/es6-destructuring/" title="ES6：解構賦值">ES6：解構賦值</a></h4>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 5：語意標籤</title>
      <link href="/2019/06/30/html5-tag/"/>
      <url>/2019/06/30/html5-tag/</url>
      
        <content type="html"><![CDATA[<p><code>HTML 5</code> 的語意標籤概念。<br><a id="more"></a></p><h2 id="語意與非語意標籤"><a href="#語意與非語意標籤" class="headerlink" title="語意與非語意標籤"></a>語意與非語意標籤</h2><p>常見的 <code>div</code> 就是典型的非語意標籤， 過往在 <code>Layout</code> 排版時，會透過設定常見的 <code>class</code> 名稱，來區分板塊上的位置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;header&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;footer&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>到了 <code>HTML 5</code> 的版本後，原先通用常見的 <code>class</code> 命名，被加入到標籤，而這些新增的標籤，透過英文可以直接了解到其對應的區塊，因此也被稱為語意標籤。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;header&gt;&lt;/header&gt;</span><br><span class="line">&lt;footer&gt;&lt;/footer&gt;</span><br></pre></td></tr></table></figure></p><h2 id="優點"><a href="#優點" class="headerlink" title="優點"></a>優點</h2><p>透過語意標籤，可以精簡化程式碼，不需要特別使用 <code>div</code> + <code>class</code>，此外對搜尋引擎優化(SEO)有更好的輔助效果，結構如下。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;header&gt;標題&lt;/header&gt;</span><br><span class="line">&lt;nav&gt;Nav選單&lt;/nav&gt;</span><br><span class="line">&lt;main&gt;</span><br><span class="line">  &lt;article&gt;文章內容&lt;/article&gt;</span><br><span class="line">  &lt;aside&gt;側邊欄&lt;/aside&gt;</span><br><span class="line">&lt;/main&gt;</span><br><span class="line">&lt;footer&gt;底部&lt;/footer&gt;</span><br></pre></td></tr></table></figure></p><p>若需要針對語意標籤處理樣式時，可以在 <code>CSS</code> 中使用標籤選擇器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header &#123;</span><br><span class="line">  color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> HTML 5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript：this (進階)</title>
      <link href="/2019/06/30/javascript-this-advanced/"/>
      <url>/2019/06/30/javascript-this-advanced/</url>
      
        <content type="html"><![CDATA[<p><code>JavaScript</code> 中的函式綁定物件 <code>this</code> 進階知識。<br><a id="more"></a></p><h2 id="使用-bind-重新綁定物件"><a href="#使用-bind-重新綁定物件" class="headerlink" title="使用 bind 重新綁定物件"></a>使用 <code>bind</code> 重新綁定物件</h2><p>在預設的函式中，<code>this</code> 會指向 <code>window</code> 物件，但當預設函式使用 <code>bind</code> 時，會被重新綁定新物件 <code>{a:2}</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function demo () &#123;</span><br><span class="line">  console.log(this)</span><br><span class="line">&#125;</span><br><span class="line">demo()</span><br><span class="line">let demo1 = demo.bind(&#123;a:2&#125;)</span><br><span class="line">demo1()</span><br></pre></td></tr></table></figure></p><h2 id="綁定物件進階用法"><a href="#綁定物件進階用法" class="headerlink" title="綁定物件進階用法"></a>綁定物件進階用法</h2><p>使用 <code>apply</code> 綁定物件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function.apply(綁定物件, [參數, ...])</span><br></pre></td></tr></table></figure></p><p>使用 <code>call</code> 綁定物件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">function.call(綁定物件, 參數)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript：this (基礎)</title>
      <link href="/2019/06/30/javascript-this-basic/"/>
      <url>/2019/06/30/javascript-this-basic/</url>
      
        <content type="html"><![CDATA[<p><code>JavaScript</code> 中的函式綁定物件 <code>this</code> 基礎知識。<br><a id="more"></a></p><h2 id="基本觀念"><a href="#基本觀念" class="headerlink" title="基本觀念"></a>基本觀念</h2><p><code>this</code> 代表函式的綁定物件，通常在函式中使用。但在不同程式碼狀況下，綁定物件會代表不同東西。</p><h3 id="情境一：獨立的函式"><a href="#情境一：獨立的函式" class="headerlink" title="情境一：獨立的函式"></a>情境一：獨立的函式</h3><p>當 <code>this</code> 使用在函式時，會指向 <code>HTML DOM</code> 中最上層的 <code>window</code> 物件。<br>也就因此能指向 <code>window</code> 底下的對象，譬如視窗的寬 <code>innerWidth</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function demo () &#123;</span><br><span class="line">  console.log(this)</span><br><span class="line">  console.log(innerWidth)</span><br><span class="line">&#125;</span><br><span class="line">demo()</span><br></pre></td></tr></table></figure></p><h3 id="情境二：物件"><a href="#情境二：物件" class="headerlink" title="情境二：物件"></a>情境二：物件</h3><p>在物件中，<code>this</code> 會被指向物件本身，因此物件中有的屬性或值，都可以被 <code>this</code> 指向，並且進行操作，例如使用 <code>console</code> 印出來。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">let obj = &#123;</span><br><span class="line">  a: 2,</span><br><span class="line">  demo: function () &#123;</span><br><span class="line">    console.log(this)</span><br><span class="line">    console.log(this.a) // 印出 2</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj.demo()</span><br></pre></td></tr></table></figure></p><h3 id="情境三：事件處理函式"><a href="#情境三：事件處理函式" class="headerlink" title="情境三：事件處理函式"></a>情境三：事件處理函式</h3><p>在事件中使用 <code>this</code>，其本身就是觸發事件的對象，譬如綁定在 <code>button</code> 上，就會觸發 <code>button</code>。而當現在未綁定時，就會指向 <code>document</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">document.addEventListener(&apos;click&apos;, function () &#123;</span><br><span class="line">  console.log(this)</span><br><span class="line">  this.body.innerHTML = &apos;Clicked&apos;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h3 id="情境四：建構函式"><a href="#情境四：建構函式" class="headerlink" title="情境四：建構函式"></a>情境四：建構函式</h3><p>在建構式當中，<code>this</code> 會是瀏覽器自動幫我們新建立好的空白物件。因此當我們在其中進行賦值時，相對也就會塞進物件中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">function Point () &#123;</span><br><span class="line">  console.log(this)</span><br><span class="line">  this.a = 5</span><br><span class="line">  this.b = 10</span><br><span class="line">&#125;</span><br><span class="line">let test = new Point()</span><br><span class="line">console.log(test)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang 入門</title>
      <link href="/2019/06/30/golang-started/"/>
      <url>/2019/06/30/golang-started/</url>
      
        <content type="html"><![CDATA[<p>記錄 <code>Golang</code> 的基礎知識、環境安裝和快速開始。<br><a id="more"></a></p><h2 id="基本特性"><a href="#基本特性" class="headerlink" title="基本特性"></a>基本特性</h2><p>泛用性程式語言，可用於開發各種應用，側重強調效能，有更強的乘載能力。同時相對於傳統的 <code>C、C++</code>，學習成本更低。</p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p><a href="https://golang.org/" target="_blank" rel="noopener">Golang 官網</a><br>點擊 Download Go，並下載對應的 OS 版本。</p><h2 id="第一個-go"><a href="#第一個-go" class="headerlink" title="第一個 go"></a>第一個 <code>go</code></h2><p>建立一個 <code>hello.go</code> 的初始檔案，撰寫以下程式碼。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">package main  // 封包</span><br><span class="line">import &quot;fmt&quot;</span><br><span class="line">func main () &#123;</span><br><span class="line">  fmt.Println(&quot;Hello Golang&quot;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="建置-build"><a href="#建置-build" class="headerlink" title="建置 build"></a>建置 <code>build</code></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build hello.go(專案名稱)</span><br></pre></td></tr></table></figure><p>若 <code>build</code> 成功，則 <code>iterm2</code> 不會出現其他額外訊息，同時資料夾多出一個 <code>hello</code> 的終端機檔案。</p><p>把 <code>hello</code> 終端機檔案，丟入 <code>zsh</code> 的路徑，印出 <code>Hello Golang</code>，即代表成功。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面試問題整理：CSS</title>
      <link href="/2019/06/29/interview-css/"/>
      <url>/2019/06/29/interview-css/</url>
      
        <content type="html"><![CDATA[<p><code>CSS</code> 基礎知識問題整理。<br><a id="more"></a></p><h2 id="Q1：什麼是選擇器"><a href="#Q1：什麼是選擇器" class="headerlink" title="Q1：什麼是選擇器?"></a>Q1：什麼是選擇器?</h2><p><code>CSS</code> 選擇器常見分為四種，同時根據權重差異，決定彼此的優先級。</p><ol><li><p>行內樣式(inline)，直接在 <code>HTML</code> 添加樣式，權重最重(1000)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p style=&quot;color:red&quot;&gt;Hello&lt;/p&gt;</span><br></pre></td></tr></table></figure></li><li><p>ID 選擇器，權重次之(100)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#header</span><br></pre></td></tr></table></figure></li><li><p>最常用的 <code>class</code>，包含偽類、屬性，權重(10)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.wrap、:hover、[attribute]</span><br></pre></td></tr></table></figure></li><li><p>元素選擇器(即 <code>HTML</code> 元素本身)、偽元素，權重(1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p、h1、em、::after</span><br></pre></td></tr></table></figure></li></ol><h2 id="Q2：盒模型"><a href="#Q2：盒模型" class="headerlink" title="Q2：盒模型"></a>Q2：盒模型</h2><p>剛開始學寫 <code>CSS</code> 時，會面臨一個問題，當元素加入 <code>padding</code>、<code>margin</code>、<code>border</code> 時，邊距會導致 <code>px</code> 的數值差異，初期為了解決這個問題，常需要特別去加加減減數字，這樣對開發實在不友善。</p><p>為了改善這個問題，引入 <code>box-sizing: border-box</code>。讓寬度只計算內容本身 + padding + border。因此我們通常建議在初始化樣式時，加入到 <code>*</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Q3：margin-垂直覆蓋屬性"><a href="#Q3：margin-垂直覆蓋屬性" class="headerlink" title="Q3：margin 垂直覆蓋屬性"></a>Q3：<code>margin</code> 垂直覆蓋屬性</h2><p><code>margin</code> 的特性中，當兩個元素為垂直時，會產生覆蓋重疊的問題。例如兩個 <code>p</code> 標籤，設定 <code>margin</code> 為 <code>5px</code>，理論上應該是 <code>5px + 5px = 10px</code>，但因為重疊的關係，實際上只有 <code>5px</code>，另外，如果兩個 <code>tag</code> 大小不一的話，大的一方會蓋掉小的一方。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 面試 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>實作：串接 OpenWeather API</title>
      <link href="/2019/06/26/openweathermap-api/"/>
      <url>/2019/06/26/openweathermap-api/</url>
      
        <content type="html"><![CDATA[<p>實作串接 <code>OpenWeather API</code>。<br><a id="more"></a></p><h2 id="申請帳號"><a href="#申請帳號" class="headerlink" title="申請帳號"></a>申請帳號</h2><p><a href="https://openweathermap.org/" target="_blank" rel="noopener">OpenWeatherMap 官網</a></p><h2 id="準備-icon"><a href="#準備-icon" class="headerlink" title="準備 icon"></a>準備 <code>icon</code></h2><h3 id="font-awesome-icon-4-7-cdn"><a href="#font-awesome-icon-4-7-cdn" class="headerlink" title="font awesome icon 4.7 cdn"></a><code>font awesome icon 4.7 cdn</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css</span><br></pre></td></tr></table></figure><h3 id="search-icon"><a href="#search-icon" class="headerlink" title="search icon"></a><code>search icon</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class=&quot;fa fa-search&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure><h3 id="寫入-HTML"><a href="#寫入-HTML" class="headerlink" title="寫入 HTML"></a>寫入 <code>HTML</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;center&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;header&gt;</span><br><span class="line">      &lt;div class=&quot;search&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;Enter City Name&quot; id=&quot;search-txt&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;#&quot; id=&quot;search-btn&quot;&gt;&lt;i class=&quot;fa fa-search&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/i&gt;&lt;/a&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6：解構賦值</title>
      <link href="/2019/06/23/es6-destructuring/"/>
      <url>/2019/06/23/es6-destructuring/</url>
      
        <content type="html"><![CDATA[<p>輕便且快速地取出元素：解構賦值。<br><a id="more"></a></p><h2 id="陣列解構"><a href="#陣列解構" class="headerlink" title="陣列解構"></a>陣列解構</h2><p>若有一個陣列如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let numArray = [2, 4, 6]</span><br></pre></td></tr></table></figure></p><p>可以透過下面兩種方法進行解構<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 方法一</span><br><span class="line">let [subNode, subItem] = numArray</span><br><span class="line"></span><br><span class="line">// 方法二</span><br><span class="line">let subNode</span><br><span class="line">let subItem</span><br><span class="line">[subNode, subItem] = numArray</span><br></pre></td></tr></table></figure></p><p>這兩種方法，都會拿到相同結果。當陣列解構後，就可以進行一般運算或處理。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let res = subNode * subItem</span><br><span class="line">console.log(res)  // 印出8</span><br></pre></td></tr></table></figure></p><h2 id="預設值"><a href="#預設值" class="headerlink" title="預設值"></a>預設值</h2><p>如果無法預期拿到陣列內容為何？透過預設值，可以避免缺少值的問題。<br>例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let numArray = [2, 4]</span><br><span class="line"></span><br><span class="line">let [first, second, third] = numArray</span><br><span class="line"></span><br><span class="line">first + second + third  // 這邊做計算的話，會產生 NaN</span><br></pre></td></tr></table></figure></p><p>但如果透過預設值為0，則能避免上面的問題<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let [first, second, third = 0] = numArray</span><br></pre></td></tr></table></figure></p><h2 id="忽略元素"><a href="#忽略元素" class="headerlink" title="忽略元素"></a>忽略元素</h2><p>意指，僅調用陣列中某一元素。可以透過前面的值為空，但逗號保留的方式來進行忽略元素。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let numArray = [2, 4, 8, 10]</span><br><span class="line"></span><br><span class="line">let [, , , item] = numArray</span><br><span class="line"></span><br><span class="line">console.log(item)</span><br></pre></td></tr></table></figure></p><h2 id="變數交換"><a href="#變數交換" class="headerlink" title="變數交換"></a>變數交換</h2><p>透過陣列的形式，進行陣列解構的變數交換<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">let a = 2;</span><br><span class="line">let b = 4;</span><br><span class="line"></span><br><span class="line">[a, b] = [b, a]</span><br><span class="line">console.log(a) // 印出 4</span><br><span class="line">console.log(b) // 印出 2</span><br></pre></td></tr></table></figure></p><h2 id="剩餘部分重組"><a href="#剩餘部分重組" class="headerlink" title="剩餘部分重組"></a>剩餘部分重組</h2><p>去除原始陣列中部分元素，透過 <code>...</code> 的方式，將剩餘的元素重組成新陣列。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">let numArray = [1, 3, 5, 7, 9]</span><br><span class="line"></span><br><span class="line">let [first, ...node] = numArray</span><br><span class="line"></span><br><span class="line">console.log(node) // 印出 [3, 5, 7, 9]</span><br></pre></td></tr></table></figure></p><h2 id="物件解構"><a href="#物件解構" class="headerlink" title="物件解構"></a>物件解構</h2><p>類似陣列解構，將變數快速賦值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">let itemObj = &#123;</span><br><span class="line">  a: 10,</span><br><span class="line">  b: 20</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let &#123;a, b&#125; = itemObj</span><br><span class="line">console.log(a) // 印出 10</span><br><span class="line">console.log(b) // 印出 20</span><br></pre></td></tr></table></figure></p><p>物件解構，同樣可以給予預設值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let &#123;a, b, c = 0&#125; = itemObj</span><br></pre></td></tr></table></figure></p><p>改變變數名稱，解構時，冒號左側的 <code>key</code> 值必須維持和物件中相同，但右側可以命名新的變數。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let itemObj = &#123;</span><br><span class="line">  a: 10,</span><br><span class="line">  b: 35</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">let &#123;a:x, b:y&#125; = itemObj</span><br><span class="line">console.log(y) // 印出 35</span><br></pre></td></tr></table></figure></p><h2 id="解構函式"><a href="#解構函式" class="headerlink" title="解構函式"></a>解構函式</h2><p>透過解構傳進來的參數，精簡程式碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function distance(point) &#123;</span><br><span class="line">  let &#123;x, y&#125; = point</span><br><span class="line">  return Math.sqrt(x*x + y*y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但是解構函式，更進階的用法是，在參數內直接解構<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function distance(&#123;x, y&#125;) &#123;</span><br><span class="line">  return Math.sqrt(x*x + y*y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>因此既能給予預設值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function distance(&#123;x = 0, y&#125;) &#123;</span><br><span class="line">  return Math.sqrt(x*x + y*y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>也能重新命名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function distance(&#123;x:a, y&#125;) &#123;</span><br><span class="line">  return Math.sqrt(a*a + y*y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript：Hoisting (宣告提升)</title>
      <link href="/2019/06/23/javascript-hoisting/"/>
      <url>/2019/06/23/javascript-hoisting/</url>
      
        <content type="html"><![CDATA[<p>記錄關於 <code>Hoisting (宣告提升)</code> 的知識點。<br><a id="more"></a></p><h2 id="JavaScript-流程"><a href="#JavaScript-流程" class="headerlink" title="JavaScript 流程"></a>JavaScript 流程</h2><p>在一般的理解中，<code>JavaScript</code> 的語法運行流程，應該是先宣告變數，並進行賦值，最後印出變數的值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var a = 5</span><br><span class="line">console.log(a)  // 印出 5</span><br></pre></td></tr></table></figure></p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><p>因為 <code>JavaScript</code> 本身具有 <code>Hoisting (宣告提升)</code> 的特性，即使程式碼順序不正確。<br><code>JavaScript</code> 在檢視的過程中，會自動將宣告的變數提升至前面，促使程式可以正常執行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">item = 10</span><br><span class="line">console.log(item)  // 印出10</span><br><span class="line">var item</span><br></pre></td></tr></table></figure></p><p>但是 <code>Hoisting</code> 的特性在於宣告提升，而不影響賦值，所以如果把賦值放到後面，則會拿到 <code>undefined</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">console.log(item)</span><br><span class="line">var item = 10</span><br></pre></td></tr></table></figure></p><p><code>JavaScript</code> 實際運行時，會拿到下面的結果，自然也就印出 <code>undefined</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var item</span><br><span class="line">console.log(item)  // 印出 undefined</span><br><span class="line">item = 10</span><br></pre></td></tr></table></figure></p><h2 id="函式"><a href="#函式" class="headerlink" title="函式"></a>函式</h2><p><code>JavaScript</code> 在函式，依然具有 Hoisting(宣告提升)的特性，所以下述的程式碼依然能夠執行。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test()</span><br><span class="line">function test () &#123;</span><br><span class="line">  console.log(&apos;Hello!&apos;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但是，如果將函式賦值給變數，同樣會因為只有變數被提升，導致後面函式出現 <code>is not defined</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test()</span><br><span class="line">var a = function test () &#123;</span><br><span class="line">  console.log(&apos;Hello!&apos;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面試問題整理：JavaScript</title>
      <link href="/2019/06/22/interview-javascript/"/>
      <url>/2019/06/22/interview-javascript/</url>
      
        <content type="html"><![CDATA[<p><code>JavaScript</code> 基礎知識問題整理。<br><a id="more"></a></p><h4 id="Q1：直接輸入-console-log-a-會印出什麼？"><a href="#Q1：直接輸入-console-log-a-會印出什麼？" class="headerlink" title="Q1：直接輸入 console.log(a) 會印出什麼？"></a>Q1：直接輸入 <code>console.log(a)</code> 會印出什麼？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught ReferenceError: a is not defined</span><br></pre></td></tr></table></figure><p><code>JavaScript</code> 是一種弱型別語言，宣告變數時，不需要先聲明類型。但如果沒有先建立變數的情況下，自然也會出現 <code>ReferenceError</code>。</p><hr><h4 id="Q2：JavaScript-目前有幾種型別？"><a href="#Q2：JavaScript-目前有幾種型別？" class="headerlink" title="Q2：JavaScript 目前有幾種型別？"></a>Q2：<code>JavaScript</code> 目前有幾種型別？</h4><p>javascript 目前定義了七種型別，包含如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">number - 數字，譬如 123</span><br><span class="line">string - 字符串，譬如：&apos;Hello&apos;</span><br><span class="line">boolean - 布林，true、false</span><br><span class="line">null</span><br><span class="line">undefined</span><br><span class="line">object - 物件，&#123;name: pitt&#125;、[12, 34, 56]、function</span><br><span class="line">symbol(ES6 新增的型別)</span><br></pre></td></tr></table></figure></p><p>這七種型別可以區分為兩大類，分別是基本型別和物件型別，除了 object 外，其他都是基本型別。</p><hr><h4 id="Q3：let-a-quot-5-quot-quot-4-quot-，console-log-a-會印出什麼？"><a href="#Q3：let-a-quot-5-quot-quot-4-quot-，console-log-a-會印出什麼？" class="headerlink" title="Q3：let a = &quot;5&quot; * &quot;4&quot;，console.log(a) 會印出什麼？"></a>Q3：<code>let a = &quot;5&quot; * &quot;4&quot;</code>，<code>console.log(a)</code> 會印出什麼？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure><p><code>JavaScript</code> 在 <code>number</code> 型別中，可以很好理解一般數學的四則運算，但是在 <code>string</code> 中，則會有些特別。<br><code>string</code> 相加時，會印出兩個字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let a = &apos;2&apos; + &apos;2&apos;</span><br><span class="line">console.log(a) // 印出 &apos;22&apos;</span><br></pre></td></tr></table></figure></p><p>但是 <code>string</code> 進行減法、乘法、除法時，則會進行一般數學計算。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let b = &apos;3&apos; * &apos;3&apos;</span><br><span class="line">console.log(b) // 印出 9</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let c = &apos;10&apos; - &apos;5&apos;</span><br><span class="line">console.log(c) // 印出 5</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let d = &apos;20&apos; / &apos;2&apos;</span><br><span class="line">console.log(d) // 印出 10</span><br></pre></td></tr></table></figure><hr><h4 id="Q4：let-item-39-1-39-39-10-39-39-2-39-39-2-39-，console-log-item-印出什麼？"><a href="#Q4：let-item-39-1-39-39-10-39-39-2-39-39-2-39-，console-log-item-印出什麼？" class="headerlink" title="Q4：let item = &#39;1&#39; == &#39;10&#39; || &#39;2&#39; == &#39;2&#39;，console.log(item) 印出什麼？"></a>Q4：<code>let item = &#39;1&#39; == &#39;10&#39; || &#39;2&#39; == &#39;2&#39;</code>，<code>console.log(item)</code> 印出什麼？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">true</span><br></pre></td></tr></table></figure><p>其實這題沒什麼懸念，只是某次看到時，不知道大腦哪根神經接錯，竟然填 <code>false</code>，因此順手紀錄下來，避免下次再次犯錯。<code>||</code> 即指滿足一邊條件即可，反之 <code>&amp;&amp;</code> 則須滿足所有條件。</p><p>因此，<code>let item = &#39;1&#39; == &#39;10&#39; &amp;&amp; &#39;2&#39; == &#39;2&#39;</code> 則印出 <code>false</code>。</p><hr><h4 id="Q5：第一行-function-是否能夠順利執行？"><a href="#Q5：第一行-function-是否能夠順利執行？" class="headerlink" title="Q5：第一行 function 是否能夠順利執行？"></a>Q5：第一行 <code>function</code> 是否能夠順利執行？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">numChange()</span><br><span class="line">function numChange() &#123;</span><br><span class="line">  let num = 10</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">基於 JavaScript 的 Hoisting(宣告提升) 特性，能夠執行。</span><br></pre></td></tr></table></figure><a href="/2019/06/23/javascript-hoisting/" title="JavaScript：Hoisting(宣告提升)">JavaScript：Hoisting(宣告提升)</a><hr><h4 id="Q6：下面-splice-方法會得出什麼結果？"><a href="#Q6：下面-splice-方法會得出什麼結果？" class="headerlink" title="Q6：下面 splice 方法會得出什麼結果？"></a>Q6：下面 <code>splice</code> 方法會得出什麼結果？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var colorLength = [</span><br><span class="line">  &apos;yellow&apos;,</span><br><span class="line">  &apos;blue&apos;,</span><br><span class="line">  &apos;red&apos;</span><br><span class="line">]</span><br><span class="line">colorLength.splice(1, 1)</span><br><span class="line">console.log(colorLength)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 印出</span><br><span class="line">[&apos;yellow&apos;, &apos;red&apos;]</span><br></pre></td></tr></table></figure><p>在 <code>splice</code> 方法中，第一個參數為起始位置，從哪一個位置開始刪除。<br>第二個參數則為結束位置，如果不填，則從起始位置後面全部刪除。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">colorLength.splice(1)</span><br><span class="line"></span><br><span class="line">// 印出</span><br><span class="line">[&apos;yellow&apos;]</span><br></pre></td></tr></table></figure></p><p>如果第二個參數填0，則不刪除任何值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">colorLength.splice(1, 0)</span><br><span class="line"></span><br><span class="line">// 印出</span><br><span class="line">[&quot;yellow&quot;, &quot;blue&quot;, &quot;red&quot;]</span><br></pre></td></tr></table></figure></p><p>第三個參數為可選，若有填值，則會加入原陣列中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">colorLength.splice(2, 2, white)</span><br><span class="line"></span><br><span class="line">// 印出</span><br><span class="line">[&quot;yellow&quot;, &quot;blue&quot;, &quot;white&quot;]</span><br></pre></td></tr></table></figure></p><h4 id="Q7：如何用-JavaScript-原生方法實作回上頁的功能？"><a href="#Q7：如何用-JavaScript-原生方法實作回上頁的功能？" class="headerlink" title="Q7：如何用 JavaScript 原生方法實作回上頁的功能？"></a>Q7：如何用 <code>JavaScript</code> 原生方法實作回上頁的功能？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">可以調用兩種方法：</span><br><span class="line">1. window.history.back // 回到上一頁</span><br><span class="line">2. window.history.go(-1) // 指定回到上一頁，若傳入參數為 -2，則指定回到上二頁</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 面試 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tab 選項卡切換內容(下)</title>
      <link href="/2019/06/17/tab-change-down/"/>
      <url>/2019/06/17/tab-change-down/</url>
      
        <content type="html"><![CDATA[<p>施工中<br><a id="more"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 頁面邏輯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>實作：簡單留言本 (React)</title>
      <link href="/2019/06/16/react-textcontent-demo/"/>
      <url>/2019/06/16/react-textcontent-demo/</url>
      
        <content type="html"><![CDATA[<p>初步摸索 <code>React</code> 相關的基礎知識，簡單記錄一點實作的過程，方便日後查看。<br><a id="more"></a></p><h2 id="配置開發環境"><a href="#配置開發環境" class="headerlink" title="配置開發環境"></a>配置開發環境</h2><h3 id="install-官方腳手架工具-create-react-app"><a href="#install-官方腳手架工具-create-react-app" class="headerlink" title="install 官方腳手架工具 create-react-app"></a><code>install</code> 官方腳手架工具 <code>create-react-app</code></h3><p><a href="https://github.com/facebook/create-react-app" target="_blank" rel="noopener">Github 網址</a></p><h4 id="全域安裝"><a href="#全域安裝" class="headerlink" title="全域安裝"></a>全域安裝</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add create-react-app -g</span><br></pre></td></tr></table></figure><h4 id="啟動-demo"><a href="#啟動-demo" class="headerlink" title="啟動 demo"></a>啟動 demo</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create-react-app react-textcontent-demo</span><br></pre></td></tr></table></figure><h4 id="運行"><a href="#運行" class="headerlink" title="運行"></a>運行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd react-textcontent-demo</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn start</span><br></pre></td></tr></table></figure><h2 id="第一個組件"><a href="#第一個組件" class="headerlink" title="第一個組件"></a>第一個組件</h2><h3 id="建立-Hello-js"><a href="#建立-Hello-js" class="headerlink" title="建立 Hello.js"></a>建立 <code>Hello.js</code></h3><p><code>mkdir src/Hello.js</code></p><h3 id="寫入-Hello-React-內容"><a href="#寫入-Hello-React-內容" class="headerlink" title="寫入 Hello React 內容"></a>寫入 <code>Hello React</code> 內容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;</span><br><span class="line"></span><br><span class="line">class Hello extends React.Component &#123;</span><br><span class="line">  render () &#123;</span><br><span class="line">    return &lt;h1&gt; Hello React &lt;/h1&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default Hello</span><br></pre></td></tr></table></figure><h3 id="引入到-src-index-js"><a href="#引入到-src-index-js" class="headerlink" title="引入到 src/index.js"></a>引入到 <code>src/index.js</code></h3><ul><li><p>引入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import Hello from &apos;./Hello&apos;</span><br></pre></td></tr></table></figure></li><li><p>掛載，此時可以看到畫面渲染出 <code>Hello React</code> 的畫面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ReactDOM.render(&lt;Hello /&gt;, document.getElementById(&apos;root&apos;));</span><br></pre></td></tr></table></figure></li></ul><h2 id="JSX-語法"><a href="#JSX-語法" class="headerlink" title="JSX 語法"></a><code>JSX</code> 語法</h2><p>JSX 語法是一種語法糖，近似於 <code>JavaScript</code> 的語法擴充，放棄模板語言的形式，採用更語意化可讀性更強的標籤。並且使用 {} 內嵌任何 <code>JavaScript</code> 表達式。</p><h3 id="e-g-計算屬性"><a href="#e-g-計算屬性" class="headerlink" title="e.g. 計算屬性"></a>e.g. 計算屬性</h3><p>如下，JSX 會計算出 3 這個數字，並渲染到頁面上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;</span><br><span class="line"></span><br><span class="line">class Hello extends React.Component &#123;</span><br><span class="line">  render () &#123;</span><br><span class="line">    const todoList = [&apos;Learning React&apos;, &apos;Learning English&apos;]</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt; Hello React &lt;/h1&gt;</span><br><span class="line">        &#123; 1+2 &#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default Hello</span><br></pre></td></tr></table></figure></p><h3 id="e-g-使用-JSX-遍歷陣列"><a href="#e-g-使用-JSX-遍歷陣列" class="headerlink" title="e.g. 使用 JSX 遍歷陣列"></a>e.g. 使用 <code>JSX</code> 遍歷陣列</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;</span><br><span class="line"></span><br><span class="line">class Hello extends React.Component &#123;</span><br><span class="line">  render () &#123;</span><br><span class="line">    const todoList = [&apos;Learning React&apos;, &apos;Learning English&apos;]</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt; Hello React &lt;/h1&gt;</span><br><span class="line">        &#123;/* 使用JSX語法處理陣列 */&#125;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &#123;</span><br><span class="line">            todoList.map(node =&gt;</span><br><span class="line">              &lt;li&gt;&#123;node&#125;&lt;/li&gt;</span><br><span class="line">            )</span><br><span class="line">          &#125;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default Hello</span><br></pre></td></tr></table></figure><h3 id="e-g-三元表達式：狀態判斷-條件返回"><a href="#e-g-三元表達式：狀態判斷-條件返回" class="headerlink" title="e.g. 三元表達式：狀態判斷 (條件返回)"></a>e.g. 三元表達式：狀態判斷 (條件返回)</h3><p>JSX 語法也能使用在表達式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;</span><br><span class="line"></span><br><span class="line">class Hello extends React.Component &#123;</span><br><span class="line">  render () &#123;</span><br><span class="line">    const isLogin = false</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt; Hello React &lt;/h1&gt;</span><br><span class="line">        &#123;/* 三元表達式 */&#125;</span><br><span class="line">        &#123; isLogin ? &lt;p&gt;已經登入&lt;/p&gt; : &lt;p&gt;尚未登入&lt;/p&gt; &#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default Hello</span><br></pre></td></tr></table></figure></p><h3 id="JSX-特例"><a href="#JSX-特例" class="headerlink" title="JSX 特例"></a>JSX 特例</h3><p>因為 <code>class</code> &amp; <code>for</code> 已經被 <code>JavaScript</code> 關鍵字佔用，因此需使用特例</p><ul><li><p>使用 <code>className</code> 代替 <code>class</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div className=&quot;style&quot;&gt; Hello World &lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用 <code>htmlFor</code> 代替 <code>for</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;label for=&apos;male&apos;&gt;Male&lt;/label&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="組件書寫特性"><a href="#組件書寫特性" class="headerlink" title="組件書寫特性"></a>組件書寫特性</h3><p>自定義 <code>component</code> 首字需大寫，這樣 JSX 才能識別為自定義還是原始 <code>HTML</code> 標籤。</p><h2 id="Props-屬性"><a href="#Props-屬性" class="headerlink" title="Props 屬性"></a><code>Props</code> 屬性</h2><p>組件近似於函式，接受特定的輸入 (props)，產出特定的輸出 (React elements)。</p><h3 id="透過實例理解-props"><a href="#透過實例理解-props" class="headerlink" title="透過實例理解 props"></a>透過實例理解 <code>props</code></h3><h4 id="e-g-NameCard"><a href="#e-g-NameCard" class="headerlink" title="e.g. NameCard"></a>e.g. NameCard</h4><p>安裝 <code>UI</code> 框架 <code>Bootstrap</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add bootstrap</span><br></pre></td></tr></table></figure></p><p>在 <code>src/components</code> 寫好 <code>NameCard.js</code> 的組件，並引入到 <code>src/app.js</code>。透過 <code>props</code> 從 <code>app.js</code> 傳值給 <code>NameCard.js</code>，而 <code>NameCard.js</code> 則負責渲染資料並佈局樣式。</p><p>需要注意的是，<code>props</code> 接受傳值後具有唯讀的特性，不可更改。</p><h4 id="函數式寫法"><a href="#函數式寫法" class="headerlink" title="函數式寫法"></a>函數式寫法</h4><p>目前 <code>React</code> 除了過往的 <code>Class</code> 寫法，也可以改成函數式寫法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;</span><br><span class="line"></span><br><span class="line">const NameCard = (props) =&gt; &#123;</span><br><span class="line">  const &#123;&#125; = props</span><br><span class="line">  return ()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default NameCard</span><br></pre></td></tr></table></figure></p><h4 id="簡單實現一個點讚-1的功能"><a href="#簡單實現一個點讚-1的功能" class="headerlink" title="簡單實現一個點讚+1的功能"></a>簡單實現一個點讚+1的功能</h4><p>同樣的，先建立組件 <code>src/components/likesButton</code>，並引入到 <code>app.js</code>。</p><p>下面是已完成的 <code>code</code>，透過 <code>constructor</code> 建立初始化數據庫 <code>state</code>，接著在頁面搭建 <code>increaseLikes</code> 函式。</p><h5 id="這邊需注意幾個要點："><a href="#這邊需注意幾個要點：" class="headerlink" title="這邊需注意幾個要點："></a>這邊需注意幾個要點：</h5><p><code>React</code> 中，事件採用駝峰式命名，例如 <code>onClick</code>。<br><code>javascript</code> 的 <code>class</code> 中，<code>this</code> 是不會自動綁定的，需要手動綁定。<br><code>state</code> 數據庫不允許直接操作，需要透過 <code>setState</code> 方法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;</span><br><span class="line"></span><br><span class="line">class LikesButton extends React.Component &#123;</span><br><span class="line">  constructor (props) &#123;</span><br><span class="line">    super(props)</span><br><span class="line">    this.state = &#123;</span><br><span class="line">      likes: 0</span><br><span class="line">    &#125;</span><br><span class="line">    // 在 javascript 的 class 中，this 是不會自動綁定的，需要手動綁定</span><br><span class="line">    this.increaseLikes = this.increaseLikes.bind(this)</span><br><span class="line">  &#125;</span><br><span class="line">  increaseLikes () &#123;</span><br><span class="line">    // state 數據庫不允許直接操作，需要透過 setState 方法</span><br><span class="line">    this.setState((node) =&gt; (&#123;</span><br><span class="line">      likes: node.likes += 1</span><br><span class="line">    &#125;))</span><br><span class="line">  &#125;</span><br><span class="line">  render () &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div className=&quot;likes-btn&quot;&gt;</span><br><span class="line">        &lt;button</span><br><span class="line">          type=&quot;button&quot;</span><br><span class="line">          className=&quot;btn btn-outline-primary btn-bg&quot;</span><br><span class="line">          onClick=&#123;this.increaseLikes&#125;</span><br><span class="line">        &gt;</span><br><span class="line">          &#123;this.state.likes&#125; 👍</span><br><span class="line">        &lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default LikesButton</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tab 選項卡切換內容(上)</title>
      <link href="/2019/06/16/tab-change-up/"/>
      <url>/2019/06/16/tab-change-up/</url>
      
        <content type="html"><![CDATA[<p>使用 tab 切換顯示內容，是常見的功能，記錄一下目前工作用的 tab 選項卡寫法。<br><a id="more"></a></p><h2 id="準備-tab-列表"><a href="#準備-tab-列表" class="headerlink" title="準備 tab 列表"></a>準備 tab 列表</h2><p>這個列表可能是 API 給的值，也可能是前端自己組的靜態陣列，使用 <code>v-for</code> 語法渲染整個陣列。</p><ul><li><p>index.vue</p><ul><li><p>template</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.tabTitle(v-for=&quot;(node, index) in itemList&quot;)</span><br></pre></td></tr></table></figure></li><li><p>初始化一個用於點擊切換 tab 的參數 filter，並且初始化 tab 陣列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  return &#123;</span><br><span class="line">    filter: 0,</span><br><span class="line">    itemList: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>當頁面一進入時，就必須呼叫 API 函式，將取得的值傳入 tab 陣列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">created () &#123;</span><br><span class="line">  this.ListService()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>methods 取得 API 的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">getItemList () &#123;</span><br><span class="line">  ListService.getItemList()</span><br><span class="line">    .then((res) =&gt; &#123;</span><br><span class="line">      this.itemList = res</span><br><span class="line">    &#125;).catch((err) =&gt; &#123;</span><br><span class="line">      console.log(err.message)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>API 約定格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">result: [</span><br><span class="line">    &#123;</span><br><span class="line">        name: &quot;選項一&quot;,</span><br><span class="line">        data: [&#123;&#125;]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        name: &quot;選項二&quot;,</span><br><span class="line">        data: [&#123;&#125;]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>這時就能從 template 上，渲染出 tab 列表。</p></li><li><p>這邊多了一個 <code>filterChange</code> 的函式，用於執行點擊時，切換下方內容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 先用長度檢查 res 回傳是否正確</span><br><span class="line">.tabTitle(v-if=&quot;itemList.length &gt; 0&quot;)</span><br><span class="line">  template(v-for=&quot;(node, index) in itemList&quot;)</span><br><span class="line">    a.tabLink(@click=&quot;filterChange(index)&quot;) &#123;&#123;node.name&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>methods</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">filterChange (index) &#123;</span><br><span class="line">  this.filter = index</span><br><span class="line">  this.subItemList = this.itemList[index].data</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="此處需修正，待補充"><a href="#此處需修正，待補充" class="headerlink" title="此處需修正，待補充"></a>此處需修正，待補充</h2><h2 id="名稱轉換"><a href="#名稱轉換" class="headerlink" title="名稱轉換"></a>名稱轉換</h2><p>通常 API 取回來的值，不一定符合前端需求，可能是英文或是數字，這時可以透過建立一個 <code>formatter</code> 函式來進行轉換。</p><h3 id="準備轉換用的靜態對照表"><a href="#準備轉換用的靜態對照表" class="headerlink" title="準備轉換用的靜態對照表"></a>準備轉換用的靜態對照表</h3><p>建立在 <code>src/configs/site.js</code> 中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export const TYPE = [</span><br><span class="line">    &#123; name: &apos;第一個名稱&apos;, value: &apos;0&apos;&#125;,</span><br><span class="line">    &#123; name: &apos;第二個名稱&apos;, value: &apos;1&apos;&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>回到 <code>index.vue</code> ，在 <code>script</code> 中引入對照表。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import &#123; TYPE &#125; from &apos;@/configs/site&apos;</span><br></pre></td></tr></table></figure></p><p>並在 <code>methods</code> 中準備 <code>formatter</code> 函式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nameFormatter (val) &#123;</span><br><span class="line">  let target = TYPE.find(node =&gt; node.value === val)</span><br><span class="line">  if (target) return target.name</span><br><span class="line">  else return val</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>渲染到 <code>template</code> 上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.tabTitle(v-if=&quot;itemList.length &gt; 0&quot;)</span><br><span class="line">  template(v-for=&quot;(node, index) in itemList&quot;)</span><br><span class="line">    a.tabLink(@click=&quot;filterChange(index)&quot;) &#123;&#123;nameFormatter(node.name)&#125;&#125;</span><br></pre></td></tr></table></figure></p><h2 id="tab-點擊切換時，進行樣式變化"><a href="#tab-點擊切換時，進行樣式變化" class="headerlink" title="tab 點擊切換時，進行樣式變化"></a>tab 點擊切換時，進行樣式變化</h2><p>幾乎無可避免，tab 切換時會被要求添加樣式來改善使用體驗。</p><h3 id="透過-v-bind-綁定-class"><a href="#透過-v-bind-綁定-class" class="headerlink" title="透過 v-bind 綁定 class"></a>透過 v-bind 綁定 class</h3><p><code>data</code> 中存有初始化的變數 <code>filter</code> ，這組參數將作為判斷機制，當點擊事件觸發時，<code>filter</code> 也隨之變化。當 <code>filter</code> === 陣列中的 <code>index</code> ，則觸發綁定 <code>active</code> class。</p><ul><li>style.scss<br>準備 tab 列表本身每個欄位的樣式，並事先給予一個偽元素 <code>after</code> 作為切換時變化用的樣式。但是先將 <code>width</code> 設為 0 使其不顯示。當 <code>active</code> 被觸發時，則將 <code>after</code> 偽元素賦予 <code>width</code> 的值，此時便可以正常顯示，同時也能做一些樣式的改變，達到點擊切換時樣式變化的效果。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">.tabLink &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  padding: 0 10px;</span><br><span class="line">  height: 100%;</span><br><span class="line">  font-size: 13px;</span><br><span class="line">  white-space: nowrap;</span><br><span class="line">  color: $base;</span><br><span class="line">  flex-direction: column;</span><br><span class="line">  cursor: pointer;</span><br><span class="line"></span><br><span class="line">  &amp;.active &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    color: $danger;</span><br><span class="line"></span><br><span class="line">    &amp;::after &#123;</span><br><span class="line">      width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;::after &#123;</span><br><span class="line">    @include position(absolute, n, 0, 0, 0);</span><br><span class="line"></span><br><span class="line">    z-index: index($z-index, base);</span><br><span class="line">    display: flex;</span><br><span class="line">    width: 0;</span><br><span class="line">    height: 2px;</span><br><span class="line">    background-color: $danger;</span><br><span class="line">    transition: .5s ease all;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 頁面邏輯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node 環境搭建(新電腦)</title>
      <link href="/2019/06/16/node-environment/"/>
      <url>/2019/06/16/node-environment/</url>
      
        <content type="html"><![CDATA[<p>環境搭建是件挺麻煩的事情，很常踩到各種坑，記錄一下近期安裝流程。方便下次快速排查問題。<br><a id="more"></a></p><h2 id="安裝-Homebrew"><a href="#安裝-Homebrew" class="headerlink" title="安裝 Homebrew"></a>安裝 Homebrew</h2><p>Homebrew 是 mac 套件管理工具，透過它來安裝 nvm</p><ul><li><a href="https://brew.sh/index_zh-tw" target="_blank" rel="noopener">Homebrew 官網</a></li><li>安裝指令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></li></ul><h2 id="安裝-nvm"><a href="#安裝-nvm" class="headerlink" title="安裝 nvm"></a>安裝 nvm</h2><p>Node.js 的版本更迭速度很快，為了有效率管理 Node 版本，使用 nvm 工具進行 Node 版本切換與安裝。</p><ul><li><a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm github</a></li><li><p>curl 安裝 nvm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash</span><br></pre></td></tr></table></figure></li><li><p>Homebrew 安裝 nvm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure></li></ul><h3 id="測試-nvm-是否安裝成功"><a href="#測試-nvm-是否安裝成功" class="headerlink" title="測試 nvm 是否安裝成功"></a>測試 nvm 是否安裝成功</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm --version</span><br></pre></td></tr></table></figure><p>但這時 iterm 另開分頁，測試<code>nvm --version</code>，有極大機率會<code>nvm: command not found</code>，所以為了解決這個問題，需要修改<code>.bash_profile</code>文件。</p><h4 id="編輯-bash-profile-文件"><a href="#編輯-bash-profile-文件" class="headerlink" title="編輯 .bash_profile 文件"></a>編輯 .bash_profile 文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi .bash_profile</span><br></pre></td></tr></table></figure><h4 id="複製下列代碼"><a href="#複製下列代碼" class="headerlink" title="複製下列代碼"></a>複製下列代碼</h4><p>進入文件後，按 <code>i</code> 切換到修改模式，將複製的代碼貼上。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export NVM_DIR=&quot;$HOME/.nvm&quot;</span><br><span class="line">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;</span><br></pre></td></tr></table></figure></p><p>按 <code>esc</code> 退出修改模式，接著按 <code>:wq</code> 保存修改後的結果。</p><h4 id="生效"><a href="#生效" class="headerlink" title="生效"></a>生效</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source .bash_profile</span><br></pre></td></tr></table></figure><h2 id="安裝-Node"><a href="#安裝-Node" class="headerlink" title="安裝 Node"></a>安裝 Node</h2><p>使用 nvm 指令查詢並安裝 node</p><h3 id="查詢遠端-node-版本"><a href="#查詢遠端-node-版本" class="headerlink" title="查詢遠端 node 版本"></a>查詢遠端 node 版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br></pre></td></tr></table></figure><h3 id="安裝需要的-node-版本"><a href="#安裝需要的-node-版本" class="headerlink" title="安裝需要的 node 版本"></a>安裝需要的 node 版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install v11.15.0</span><br></pre></td></tr></table></figure><h3 id="切換需要使用的-node-版本"><a href="#切換需要使用的-node-版本" class="headerlink" title="切換需要使用的 node 版本"></a>切換需要使用的 node 版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use v11.15.0</span><br></pre></td></tr></table></figure><h3 id="設定預設使用的-node-版本"><a href="#設定預設使用的-node-版本" class="headerlink" title="設定預設使用的 node 版本"></a>設定預設使用的 node 版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm alias default v11.15.0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> nvm </tag>
            
            <tag> 環境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>簡單實現 ProgressBar 效果</title>
      <link href="/2019/06/12/progressBar/"/>
      <url>/2019/06/12/progressBar/</url>
      
        <content type="html"><![CDATA[<p>記錄工作上，ProgressBar 的實現方式，以及如何結合API，達到推進的效果。<br><a id="more"></a></p><h2 id="頁面結構"><a href="#頁面結構" class="headerlink" title="頁面結構"></a>頁面結構</h2><h3 id="準備一條當基底背景的-ProgressBar"><a href="#準備一條當基底背景的-ProgressBar" class="headerlink" title="準備一條當基底背景的 ProgressBar"></a>準備一條當基底背景的 ProgressBar</h3><ul><li><p>index.vue( 此處使用 Pug )</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">span.graph</span><br></pre></td></tr></table></figure></li><li><p>style.scss</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// ProgressBar 的寬高、背景色或 border-radius，依設計需求調整。</span><br><span class="line"></span><br><span class="line">.graph &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  width: 85%;</span><br><span class="line">  height: 6px;</span><br><span class="line">  background-color: #e6f8f9;</span><br><span class="line">  border-radius: $radius;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="準備一條產生前進變化的-ProgressBar"><a href="#準備一條產生前進變化的-ProgressBar" class="headerlink" title="準備一條產生前進變化的 ProgressBar"></a>準備一條產生前進變化的 ProgressBar</h3><ul><li><p>index.vue</p><ul><li><p>template</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">span.graph</span><br><span class="line">  i.line(v-if=&quot;node.content&quot; :style=&quot;&#123;width:lineWidth(node.content.rate)&#125;&quot;)</span><br></pre></td></tr></table></figure></li><li><p>methods</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lineWidth (item) &#123;</span><br><span class="line">  return item + &apos;%&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>style.scss</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.graph &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  width: 85%;</span><br><span class="line">  height: 6px;</span><br><span class="line">  background-color: #e6f8f9;</span><br><span class="line">  border-radius: $radius;</span><br><span class="line"></span><br><span class="line">  .line &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    height: 100%;</span><br><span class="line">    background-image: linear-gradient(to right, #ffeafe, #ccc1ff, #9ea9f0);</span><br><span class="line">    border-radius: $radius;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="運作邏輯"><a href="#運作邏輯" class="headerlink" title="運作邏輯"></a>運作邏輯</h2><p>負責執行前進變化的 ProgressBar，除去 width 之外，height 和 border-radius 必須和第一條 ProgressBar 相同，背景色則必須有所不同，才能出現覆蓋，達到前進的效果。</p><p>接著，問題在於，如何讓 width 出現動態變化。透過 API 取得的值，傳參給函式 lineWidth()，在函式中將值進行轉換並 return，如此便達到 ProgressBar 會隨著 API 取回的值產生前進變化。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 頁面邏輯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Next 設定</title>
      <link href="/2019/01/08/hexo-theme-next%20%E8%A8%AD%E5%AE%9A/"/>
      <url>/2019/01/08/hexo-theme-next%20%E8%A8%AD%E5%AE%9A/</url>
      
        <content type="html"><![CDATA[<p>記錄 Hexo 的 theme，Next 樣式調整的值。<br><a id="more"></a></p><h4 id="調整路徑位置themes-next-config-yml"><a href="#調整路徑位置themes-next-config-yml" class="headerlink" title="調整路徑位置themes/next/_config.yml"></a>調整路徑位置<code>themes/next/_config.yml</code></h4><h4 id="右側回到頂部-button-是否開啟百分比數字"><a href="#右側回到頂部-button-是否開啟百分比數字" class="headerlink" title="右側回到頂部 button 是否開啟百分比數字"></a>右側回到頂部 button 是否開啟百分比數字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrollpercent: true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> hexo-theme-next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nvm 常用指令</title>
      <link href="/2019/01/08/nvm-instruction/"/>
      <url>/2019/01/08/nvm-instruction/</url>
      
        <content type="html"><![CDATA[<p>記錄常用 nvm 指令。<br><a id="more"></a></p><h4 id="查詢遠端可安裝的-node-版本"><a href="#查詢遠端可安裝的-node-版本" class="headerlink" title="查詢遠端可安裝的 node 版本"></a>查詢遠端可安裝的 node 版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br></pre></td></tr></table></figure><h4 id="安裝所需的版本號"><a href="#安裝所需的版本號" class="headerlink" title="安裝所需的版本號"></a>安裝所需的版本號</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm install v10.15.0</span><br></pre></td></tr></table></figure><h4 id="切換所需使用的-node-版本"><a href="#切換所需使用的-node-版本" class="headerlink" title="切換所需使用的 node 版本"></a>切換所需使用的 node 版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use v10.15.0</span><br></pre></td></tr></table></figure><h4 id="設定預設使用的-node-版本"><a href="#設定預設使用的-node-版本" class="headerlink" title="設定預設使用的 node 版本"></a>設定預設使用的 node 版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm alias default v10.15.0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> nvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-Cli 3.0 Demo</title>
      <link href="/2019/01/08/Vue-Cli%203.0%20Demo/"/>
      <url>/2019/01/08/Vue-Cli%203.0%20Demo/</url>
      
        <content type="html"><![CDATA[<p>vue-cli 3.0 版本已經釋出一段時間，考慮到後續工作專案會開始採用，也必須著手實作了解一下。<br><a id="more"></a><br><a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener">Vue-Cli 官網</a></p><h2 id="與-2-0-版本差異"><a href="#與-2-0-版本差異" class="headerlink" title="與 2.0 版本差異"></a>與 2.0 版本差異</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 新增GUI介面，可以不需使用指令。</span><br><span class="line">2. 更好的兼容支援TypeScript。</span><br><span class="line">3. 傳統在2.0版本的webpack配置，在GUI介面除了可使用下拉選擇方式，也多了更多的說明介紹。</span><br></pre></td></tr></table></figure><h2 id="安裝流程"><a href="#安裝流程" class="headerlink" title="安裝流程"></a>安裝流程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 安裝方式(須移除舊版本Vue-Cli 1.x or 2.x)</span><br><span class="line"></span><br><span class="line">npm uninstall vue-cli -g</span><br><span class="line"># or</span><br><span class="line">yarn global remove vue-cli</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 前置要求：Node版本最低需8.9或更高(官方推薦8.11.0以上)</span><br><span class="line">// 安裝指令</span><br><span class="line"></span><br><span class="line">npm install -g @vue/cli</span><br><span class="line"># or</span><br><span class="line">yarn global add @vue/cli</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 確認是否install成功，檢查版本號</span><br><span class="line"></span><br><span class="line">vue --version</span><br><span class="line"># or</span><br><span class="line">vue -V</span><br><span class="line"></span><br><span class="line"># 2019/1/8 v3.3.0</span><br></pre></td></tr></table></figure><h4 id="測試兩種專案結果"><a href="#測試兩種專案結果" class="headerlink" title="測試兩種專案結果"></a>測試兩種專案結果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A專案是以vue-cli 2.x版本時建立</span><br><span class="line"></span><br><span class="line">移除vue-cli 2.x 並安裝vue-cli 3.0後</span><br><span class="line"></span><br><span class="line">create B專案，再回頭重新以3.0環境啟動A專案，可正常運行</span><br><span class="line">差別在於2.x版本的啟動指令仍是yarn run dev</span><br><span class="line">而3.0則改用yarn serve</span><br></pre></td></tr></table></figure><h2 id="兩種創建專案方式-command-line-GUI"><a href="#兩種創建專案方式-command-line-GUI" class="headerlink" title="兩種創建專案方式(command-line || GUI)"></a>兩種創建專案方式(command-line || GUI)</h2><h3 id="command-line"><a href="#command-line" class="headerlink" title="command-line"></a>command-line</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create 專案名稱</span><br></pre></td></tr></table></figure><h4 id="選擇預設套件或是手動選擇"><a href="#選擇預設套件或是手動選擇" class="headerlink" title="選擇預設套件或是手動選擇"></a>選擇預設套件或是手動選擇</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 第一次在3.0環境建立專案時，僅有上述兩種選項</span><br><span class="line">// 當建立過一次模板環境後，可以選擇save，在第二次建立時，可以選用</span><br></pre></td></tr></table></figure><img src="/2019/01/08/Vue-Cli%203.0%20Demo/select.png"><h4 id="依需求選擇安裝項目"><a href="#依需求選擇安裝項目" class="headerlink" title="依需求選擇安裝項目"></a>依需求選擇安裝項目</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按 space 選擇需安裝的項目</span><br></pre></td></tr></table></figure><img src="/2019/01/08/Vue-Cli%203.0%20Demo/space-select.png"><h4 id="ESlint選規範版本"><a href="#ESlint選規範版本" class="headerlink" title="ESlint選規範版本"></a>ESlint選規範版本</h4><p><img src="https://i.imgur.com/KdPyhMA.png" alt=""></p><h4 id="每次儲存時檢查代碼規範或commit時檢查"><a href="#每次儲存時檢查代碼規範或commit時檢查" class="headerlink" title="每次儲存時檢查代碼規範或commit時檢查"></a>每次儲存時檢查代碼規範或commit時檢查</h4><p><img src="https://i.imgur.com/98UuQvU.png" alt=""></p><h4 id="安裝在package-json內或獨立安裝"><a href="#安裝在package-json內或獨立安裝" class="headerlink" title="安裝在package.json內或獨立安裝"></a>安裝在package.json內或獨立安裝</h4><p><img src="https://i.imgur.com/VwVIwNo.png" alt=""></p><h4 id="是否保存這次建立的選項-提供下次專案直接套用"><a href="#是否保存這次建立的選項-提供下次專案直接套用" class="headerlink" title="是否保存這次建立的選項(提供下次專案直接套用)"></a>是否保存這次建立的選項(提供下次專案直接套用)</h4><p><img src="https://i.imgur.com/XVfShLK.png" alt=""></p><h3 id="GUI-創建-建議暫時擱置不使用，尚未穩定"><a href="#GUI-創建-建議暫時擱置不使用，尚未穩定" class="headerlink" title="GUI 創建(建議暫時擱置不使用，尚未穩定)"></a>GUI 創建(建議暫時擱置不使用，尚未穩定)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 安裝完成vue-cli 3.0環境後，輸入指令vue ui</span><br><span class="line"></span><br><span class="line">// 家中 mac 測試，GUI 工具會有持續 loading 的 error 問題</span><br><span class="line">// 查官方 issues 這一類的問題相當多，3.0.0 版本時全域安裝core.js可解</span><br></pre></td></tr></table></figure><h2 id="資料夾結構"><a href="#資料夾結構" class="headerlink" title="資料夾結構"></a>資料夾結構</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vue-cli 3.0 版本對應的是 webpack4.0 以上版本。</span><br><span class="line"></span><br><span class="line">因為官方不希望開發者花費過多精力調整webpack設定，</span><br><span class="line"></span><br><span class="line">因此統一移入node_modules</span><br></pre></td></tr></table></figure><h3 id="路徑如下："><a href="#路徑如下：" class="headerlink" title="路徑如下："></a>路徑如下：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node_modules/@vue/cli-service/webpack.config.js</span><br><span class="line"></span><br><span class="line">// Service.js</span><br><span class="line"></span><br><span class="line">node_modules/@vue/cli-service/lib/Service.js</span><br></pre></td></tr></table></figure><h3 id="引入路徑名稱"><a href="#引入路徑名稱" class="headerlink" title="引入路徑名稱"></a>引入路徑名稱</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 在 3.0 版本需注意引入路徑名稱和2.x有所差異</span><br><span class="line"></span><br><span class="line">e.g.</span><br><span class="line">import HelloWorld from &apos;@/components/HelloWorld.vue&apos;</span><br><span class="line"></span><br><span class="line">副檔名中.vue 在 3.0 版本不可被省略。</span><br></pre></td></tr></table></figure><h3 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">過往會被放在根目錄下，3.0 版本改至 public 下</span><br></pre></td></tr></table></figure><h3 id="測試打包"><a href="#測試打包" class="headerlink" title="測試打包"></a>測試打包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn build</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node 版本路徑修復</title>
      <link href="/2019/01/03/node-version-fixed/"/>
      <url>/2019/01/03/node-version-fixed/</url>
      
        <content type="html"><![CDATA[<p>近期公司 MIS 調整硬體設備，造成環境有點跑掉，記錄一下自己在 stackoverflow 上找到的解法。<br><a id="more"></a><br>打開 iTerm 會出現下述 error。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm is not compatible with the npm config “prefix” option: currently set to “/Users/xxx/.nvm/versions/node/v8.12.0&quot;</span><br><span class="line">Run `npm config delete prefix` or `nvm use --delete-prefix v8.12.0 --silent` to unset it.</span><br></pre></td></tr></table></figure></p><p>從字面上來看，應該是 npm 和 nvm 管理的 node 版本沒有對上，按照終端機提供的訊息，敲入對應指令。</p><p>再檢查 node 版本似乎是正常了，但事實上，若在 iTerm 上另開分頁，依然會跳相同的提示錯誤。</p><p>雖然不影響操作，但看到總是不順眼，google 了一下解法，最終測試成功方案如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config delete prefix</span><br><span class="line">npm config set prefix $NVM_DIR/versions/node/v8.12.0</span><br></pre></td></tr></table></figure></p><p>看起來應該是先刪除 npm 中設定的 prefix ，再重新設定當前 nvm 使用的版本。</p><ul><li>附上 <a href="https://stackoverflow.com/questions/34718528/nvm-is-not-compatible-with-the-npm-config-prefix-option" target="_blank" rel="noopener">stackoverflow</a> 找到的解法。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Node </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 踩坑記</title>
      <link href="/2019/01/03/fixed-error/"/>
      <url>/2019/01/03/fixed-error/</url>
      
        <content type="html"><![CDATA[<p>動手安裝 Hexo 過程中踩了一些坑，順手記錄自己 google 到的解法。<br><a id="more"></a></p><h2 id="hexo-g-生成路徑錯誤導致樣式跑版"><a href="#hexo-g-生成路徑錯誤導致樣式跑版" class="headerlink" title="hexo g 生成路徑錯誤導致樣式跑版"></a>hexo g 生成路徑錯誤導致樣式跑版</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">hexo g 是 hexo 打包的指令，但若未調整生成路徑，則會出現打包後檔案路徑錯誤，</span><br><span class="line"></span><br><span class="line">導致開啟時，整個樣式跑版。</span><br><span class="line"></span><br><span class="line">要解決這個問題，需打開 _config.yml</span><br><span class="line"></span><br><span class="line">檢查 url 和 root 兩個項目</span><br><span class="line"></span><br><span class="line">以部署到 github-page 為例：</span><br><span class="line"></span><br><span class="line">url 為專案所在位置：</span><br><span class="line">https://wuzhe0912.github.io/PittWu-Hexo/</span><br><span class="line"></span><br><span class="line">root 則填上專案名稱：</span><br><span class="line">/PittWu-Hexo/</span><br><span class="line"></span><br><span class="line">完成修改後，重整 github-page，即可修正樣式錯誤問題。</span><br></pre></td></tr></table></figure><h2 id="Next-主題背景動畫配置無效果"><a href="#Next-主題背景動畫配置無效果" class="headerlink" title="Next 主題背景動畫配置無效果"></a>Next 主題背景動畫配置無效果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Next 在5.x版本時，設定背景動畫效果，僅需在 _config.yml 調整 true or false 即有效果。</span><br><span class="line"></span><br><span class="line">但在6.X版本，不知道因為何種原因，這種設置方式完全失效。</span><br><span class="line">因此改採用下述三個步驟設置動畫效果。</span><br><span class="line"></span><br><span class="line">e.g. 選擇 canvas_nest 這個效果</span><br><span class="line"></span><br><span class="line">1. cd themes/next</span><br><span class="line">2. git clone https://github.com/theme-next/theme-next-canvas-nest source / lib / canvas-nest</span><br><span class="line">3. next/_config.yml 設定 enable: true</span><br><span class="line"></span><br><span class="line">其他三種動畫效果，同前述。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 安裝筆記</title>
      <link href="/2019/01/02/hexo-install-note/"/>
      <url>/2019/01/02/hexo-install-note/</url>
      
        <content type="html"><![CDATA[<p>記錄一下，自己安裝 Hexo 作為 Blog 的流程步驟。<br><a id="more"></a></p><h2 id="選擇主題"><a href="#選擇主題" class="headerlink" title="選擇主題"></a>選擇主題</h2><ul><li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">挑選 Hexo 主題網址</a></li></ul><p>選擇 Next 主題</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd 資料夾</span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>修改網站設定_config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>重新啟動 server</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><h2 id="Scheme-設定"><a href="#Scheme-設定" class="headerlink" title="Scheme 設定"></a>Scheme 設定</h2><p>Next 有四種 Scheme 可以選擇，預設主題風格是 Muse。</p><p>在<code>themes/next/_config.yml</code>中找到 scheme 設定，再將想選擇的註釋去除即可。</p><p>個人選擇 Pisces。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Schemes</span><br><span class="line"># scheme: Muse</span><br><span class="line"># scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line"># scheme: Gemini</span><br></pre></td></tr></table></figure><h2 id="關於作者"><a href="#關於作者" class="headerlink" title="關於作者"></a>關於作者</h2><p>新增大頭貼</p><p>建立存放圖片用的資料夾<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir source/image</span><br></pre></td></tr></table></figure></p><p>將大頭貼的照片丟入資料夾<code>source/images</code></p><p>接著在主題設定<code>themes/next/_config.yml</code>中，設定大頭貼路徑。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  url: /images/avatar.jpeg</span><br></pre></td></tr></table></figure><p>修改作者名稱</p><p>在<code>_config.yml</code>中設定姓名、標題和副標題<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: 無哲的隨手筆記</span><br><span class="line">subtitle:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">author: Pitt Wu</span><br><span class="line">language: zh-tw</span><br><span class="line">timezone:</span><br></pre></td></tr></table></figure></p><h2 id="動畫效果"><a href="#動畫效果" class="headerlink" title="動畫效果"></a>動畫效果</h2><p>Next 主題提供數種背景動畫效果，<code>themes/next/_config.yml</code>供使用者選擇。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">e.g. 選擇 canvas_nest 這個效果</span><br><span class="line"></span><br><span class="line">1. cd themes/next</span><br><span class="line">2. git clone https://github.com/theme-next/theme-next-canvas-nest source / lib / canvas-nest</span><br><span class="line">3. next/_config.yml 設定 enable: true</span><br></pre></td></tr></table></figure><h2 id="Tags-分類"><a href="#Tags-分類" class="headerlink" title="Tags 分類"></a>Tags 分類</h2><ul><li>透過標籤將文章進行分類</li></ul><p>新建一個頁面，用於保存所有 tag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure></p><p>接著將 type 設定為 “tags”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: All tags</span><br><span class="line">date: 2019-01-03 22:48:09</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>之後，所有的文章皆能加入對應的標籤<br>e.g.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo 安裝筆記</span><br><span class="line">date: 2019-01-02 10:28:37</span><br><span class="line">tags: Hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h2 id="關於我"><a href="#關於我" class="headerlink" title="關於我"></a>關於我</h2><p>既然是 Blog 自然需要一頁 about 用於自我介紹。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure></p><p>在<code>themes/next/_config.yml</code>中預設有 menu 欄位，將需要的欄位前方註解去除。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  #categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure></p><h2 id="開啟社群帳號連結"><a href="#開啟社群帳號連結" class="headerlink" title="開啟社群帳號連結"></a>開啟社群帳號連結</h2><p>在<code>themes/next/_config.yml</code>中可以新增個人社群網站連結。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/wuzhe0912 || github</span><br><span class="line">  E-Mail: mailto:kgb00128@gmail.com || Gmail</span><br><span class="line">  #Weibo: https://weibo.com/yourname || weibo</span><br><span class="line">  #Google: https://plus.google.com/yourname || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br></pre></td></tr></table></figure></p><h2 id="文章預覽"><a href="#文章預覽" class="headerlink" title="文章預覽"></a>文章預覽</h2><p>在<code>themes/next/_config.yml</code>中，可以透過字數設定來才切預覽。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure></p><p>也可以透過<code>&lt;!--more--&gt;</code>來裁切，在<code>&lt;!--more--&gt;</code>以上的文字，會出現在預覽。</p><h2 id="文章搜索"><a href="#文章搜索" class="headerlink" title="文章搜索"></a>文章搜索</h2><p>安裝插件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-generator-searchdb</span><br></pre></td></tr></table></figure></p><p>在根目錄的<code>_config.yml</code>中，添加下述內容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></p><p>再到主題<code>themes/next/_config.yml</code>中設定為 true<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></p><h2 id="嵌入圖片"><a href="#嵌入圖片" class="headerlink" title="嵌入圖片"></a>嵌入圖片</h2><p>因為已經在根目錄中，將<code>post_asset_folder</code>設為 true，因此每次 new post 都會有對應的料夾。<br>為了便於管理，我們文章的圖片自然會放在對應的資料夾。</p><p>圖片嵌入的格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img space-select.png %&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Google-SEO-待添加"><a href="#Google-SEO-待添加" class="headerlink" title="Google SEO (待添加)"></a>Google SEO (待添加)</h2><p>獲取 Google Site Verification Code<br>登入<a href="https://search.google.com/search-console/about?hl=zh-TW&amp;utm_source=wmx&amp;utm_medium=wmx-welcome" target="_blank" rel="noopener">Google Search Console</a>，並輸入 Github-Page 網址。</p><p>在<code>themes/next/_config.yml</code>中填入驗證碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google_site_verification: ooxx</span><br></pre></td></tr></table></figure></p><p>安裝 sitemap 插件<br>安裝<code>hexo-sitemap-generator-sitemap</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-generator-sitemap</span><br><span class="line"># or</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></p><p>在<code>_config.yml</code>中調整設定</p><h2 id="右上角添加-Github-Fork-圖片"><a href="#右上角添加-Github-Fork-圖片" class="headerlink" title="右上角添加 Github Fork 圖片"></a>右上角添加 Github Fork 圖片</h2><p>在<code>themes/next/layout/_layout.swig</code>中，找到下述代碼：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;header id=&quot;header&quot; class=&quot;header&quot; itemscope itemtype=&quot;http://schema.org/WPHeader&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;header-inner&quot;&gt;&#123;% include &apos;_partials/header/index.swig&apos; %&#125;&lt;/div&gt;</span><br><span class="line">&lt;/header&gt;</span><br></pre></td></tr></table></figure></p><p>並在 header 標籤下方添加 Github Corner 超連結樣式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;header id=&quot;header&quot; class=&quot;header&quot; itemscope itemtype=&quot;http://schema.org/WPHeader&quot;&gt;</span><br><span class="line">  &lt;div class=&quot;header-inner&quot;&gt;&#123;% include &apos;_partials/header/index.swig&apos; %&#125;&lt;/div&gt;</span><br><span class="line">  &lt;a href=&quot;https://github.com/wuzhe0912&quot; class=&quot;github-corner&quot; target=&quot;_blank&quot; title=&quot;Follow me on GitHub&quot; aria-label=&quot;Follow me on GitHub&quot;&gt;</span><br><span class="line">    &lt;svg width=&quot;80&quot; height=&quot;80&quot; viewBox=&quot;0 0 250 250&quot; style=&quot;fill:#42b983; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden=&quot;true&quot;&gt;</span><br><span class="line">      &lt;path d=&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill=&quot;currentColor&quot; style=&quot;transform-origin: 130px 106px;&quot; class=&quot;octo-arm&quot;&gt;&lt;/path&gt;</span><br><span class="line">      &lt;path d=&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill=&quot;currentColor&quot; class=&quot;octo-body&quot;&gt;&lt;/path&gt;</span><br><span class="line">    &lt;/svg&gt;</span><br><span class="line">  &lt;/a&gt;</span><br><span class="line">&lt;/header&gt;</span><br></pre></td></tr></table></figure></p><p>再到<code>themes/next/source/css/_custom.styl</code>添加樣式代碼<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">/* GitHub Cornor */</span><br><span class="line">.github-corner :hover .octo-arm &#123;</span><br><span class="line">    animation: octocat-wave 560ms ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">@media (max-width: 991px) &#123;</span><br><span class="line">  .github-corner &gt;svg &#123;</span><br><span class="line">    fill: #42b983 !important;</span><br><span class="line">    color: #fff !important;</span><br><span class="line">  &#125;</span><br><span class="line">  .github-corner .github-corner:hover .octo-arm &#123;</span><br><span class="line">    animation: none;</span><br><span class="line">  &#125;</span><br><span class="line">  .github-corner .github-corner .octo-arm &#123;</span><br><span class="line">    animation: octocat-wave 560ms ease-in-out;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-moz-keyframes octocat-wave &#123;</span><br><span class="line">  0%, 100% &#123;</span><br><span class="line">    -webkit-transform: rotate(0);</span><br><span class="line">    -moz-transform: rotate(0);</span><br><span class="line">    -ms-transform: rotate(0);</span><br><span class="line">    -o-transform: rotate(0);</span><br><span class="line">    transform: rotate(0);</span><br><span class="line">  &#125;</span><br><span class="line">  20%, 60% &#123;</span><br><span class="line">    -webkit-transform: rotate(-25deg);</span><br><span class="line">    -moz-transform: rotate(-25deg);</span><br><span class="line">    -ms-transform: rotate(-25deg);</span><br><span class="line">    -o-transform: rotate(-25deg);</span><br><span class="line">    transform: rotate(-25deg);</span><br><span class="line">  &#125;</span><br><span class="line">  40%, 80% &#123;</span><br><span class="line">    -webkit-transform: rotate(10deg);</span><br><span class="line">    -moz-transform: rotate(10deg);</span><br><span class="line">    -ms-transform: rotate(10deg);</span><br><span class="line">    -o-transform: rotate(10deg);</span><br><span class="line">    transform: rotate(10deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-webkit-keyframes octocat-wave &#123;</span><br><span class="line">  0%, 100% &#123;</span><br><span class="line">    -webkit-transform: rotate(0);</span><br><span class="line">    -moz-transform: rotate(0);</span><br><span class="line">    -ms-transform: rotate(0);</span><br><span class="line">    -o-transform: rotate(0);</span><br><span class="line">    transform: rotate(0);</span><br><span class="line">  &#125;</span><br><span class="line">  20%, 60% &#123;</span><br><span class="line">    -webkit-transform: rotate(-25deg);</span><br><span class="line">    -moz-transform: rotate(-25deg);</span><br><span class="line">    -ms-transform: rotate(-25deg);</span><br><span class="line">    -o-transform: rotate(-25deg);</span><br><span class="line">    transform: rotate(-25deg);</span><br><span class="line">  &#125;</span><br><span class="line">  40%, 80% &#123;</span><br><span class="line">    -webkit-transform: rotate(10deg);</span><br><span class="line">    -moz-transform: rotate(10deg);</span><br><span class="line">    -ms-transform: rotate(10deg);</span><br><span class="line">    -o-transform: rotate(10deg);</span><br><span class="line">    transform: rotate(10deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-o-keyframes octocat-wave &#123;</span><br><span class="line">  0%, 100% &#123;</span><br><span class="line">    -webkit-transform: rotate(0);</span><br><span class="line">    -moz-transform: rotate(0);</span><br><span class="line">    -ms-transform: rotate(0);</span><br><span class="line">    -o-transform: rotate(0);</span><br><span class="line">    transform: rotate(0);</span><br><span class="line">  &#125;</span><br><span class="line">  20%, 60% &#123;</span><br><span class="line">    -webkit-transform: rotate(-25deg);</span><br><span class="line">    -moz-transform: rotate(-25deg);</span><br><span class="line">    -ms-transform: rotate(-25deg);</span><br><span class="line">    -o-transform: rotate(-25deg);</span><br><span class="line">    transform: rotate(-25deg);</span><br><span class="line">  &#125;</span><br><span class="line">  40%, 80% &#123;</span><br><span class="line">    -webkit-transform: rotate(10deg);</span><br><span class="line">    -moz-transform: rotate(10deg);</span><br><span class="line">    -ms-transform: rotate(10deg);</span><br><span class="line">    -o-transform: rotate(10deg);</span><br><span class="line">    transform: rotate(10deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes octocat-wave &#123;</span><br><span class="line">  0%, 100% &#123;</span><br><span class="line">    -webkit-transform: rotate(0);</span><br><span class="line">    -moz-transform: rotate(0);</span><br><span class="line">    -ms-transform: rotate(0);</span><br><span class="line">    -o-transform: rotate(0);</span><br><span class="line">    transform: rotate(0);</span><br><span class="line">  &#125;</span><br><span class="line">  20%, 60% &#123;</span><br><span class="line">    -webkit-transform: rotate(-25deg);</span><br><span class="line">    -moz-transform: rotate(-25deg);</span><br><span class="line">    -ms-transform: rotate(-25deg);</span><br><span class="line">    -o-transform: rotate(-25deg);</span><br><span class="line">    transform: rotate(-25deg);</span><br><span class="line">  &#125;</span><br><span class="line">  40%, 80% &#123;</span><br><span class="line">    -webkit-transform: rotate(10deg);</span><br><span class="line">    -moz-transform: rotate(10deg);</span><br><span class="line">    -ms-transform: rotate(10deg);</span><br><span class="line">    -o-transform: rotate(10deg);</span><br><span class="line">    transform: rotate(10deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>重新啟動服務<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><h2 id="文章閱讀人數統計"><a href="#文章閱讀人數統計" class="headerlink" title="文章閱讀人數統計"></a>文章閱讀人數統計</h2><p>參考諸多前輩的做法後，採用 LeanCloud 的服務。</p><p><a href="https://leancloud.cn/" target="_blank" rel="noopener"> LeanCloud </a></p><p>建立一個新帳號後，進入控制台，創建一個新的應用。</p><p>點擊已創建的應用，會進入應用的控制頁面。</p><p>接著點選創建<code>Class</code>，選擇限制寫入</p><p>點選左側設置，進入應用 Key，複製 App ID 和 App Key，</p><p>並貼到<code>themes/next/_config.yml</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: false</span><br><span class="line">  app_id: #&lt;app_id&gt;</span><br><span class="line">  app_key: #&lt;app_key&gt;</span><br></pre></td></tr></table></figure></p><h2 id="參考資源"><a href="#參考資源" class="headerlink" title="參考資源"></a>參考資源</h2><p><a href="https://yogapan.github.io/" target="_blank" rel="noopener">小蛇蛇的筆記</a><br><a href="https://hoxis.github.io/" target="_blank" rel="noopener">hoxis’ blog</a><br><a href="https://blog.johnwu.cc/article/how-to-add-visitors-counter-on-hexo.html" target="_blank" rel="noopener">John Wu’s Blog</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
